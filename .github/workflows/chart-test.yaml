name: Lint and Test Charts

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.6.3

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1
        with:
          version: 3.11.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch main --chart-dirs charts --chart-dirs other-charts)
          if [[ -n "$changed" ]]; then
            echo 'changed=true' >> $GITHUB_OUTPUT
          fi

      - name: Run chart-testing (lint changed)
        id: ct-lint
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch main --chart-dirs charts --chart-dirs other-charts
        continue-on-error: true

      - name: Run chart-testing (lint all)
        id: ct-lint-all
        run: ct lint --target-branch main --all --chart-dirs charts --chart-dirs other-charts
        continue-on-error: true

      - name: Notify Slack of chart linting failure
        if: steps.ct-lint.outcome == 'failure' || steps.ct-lint-all.outcome == 'failure'
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload-delimiter: "_"
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Linting failed for ${{ steps.ct-lint.outcome == 'failure' && 'changed' || 'all' }} charts.  ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: Fail the workflow if failed linting
        if: steps.ct-lint.outcome == 'failure' || steps.ct-lint-all.outcome == 'failure'
        run: exit 1

  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.6.3

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1
        with:
          version: 3.11.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch main --chart-dirs charts --chart-dirs other-charts --charts rstudio-launcher-rbac)
          if [[ -n "$changed" ]]; then
            echo 'changed=true' >> $GITHUB_OUTPUT
          fi

      - name: Create kind cluster
        uses: helm/kind-action@v1.10.0
        if: ${{ steps.list-changed.outputs.changed == 'true' || github.ref == 'refs/heads/main' }}

      - name: Install SealedSecrets Helm Chart
        if: ${{ steps.list-changed.outputs.changed == 'true' || github.ref == 'refs/heads/main' }}
        run: |
          helm repo add sealed-secrets https://bitnami-labs.github.io/sealed-secrets
          helm install sealed-secrets sealed-secrets/sealed-secrets

      # Delete any values files that are viable for linting only.  That way we only have the values files that are used
      # for installation.
      - name: Remove linting-only ci values files
        if: ${{ steps.list-changed.outputs.changed == 'true' || github.ref == 'refs/heads/main' }}
        run: rm charts/*/ci/lint-*

      # no allow-failure until https://github.com/actions/toolkit/issues/399
      - name: Run chart-testing (install changed)
        id: ct-install
        if: ${{ github.ref != 'refs/heads/main' && steps.list-changed.outputs.changed == 'true' }}
        run: ct install --target-branch main --chart-dirs charts --chart-dirs other-charts --excluded-charts rstudio-workbench,rstudio-library,rstudio-connect,rstudio-pm,posit-chronicle
        continue-on-error: true

      # no allow-failure until https://github.com/actions/toolkit/issues/399
      - name: Run chart-testing (install all)
        id: ct-install-all
        if: ${{ github.ref == 'refs/heads/main' }}
        run: ct install --target-branch main --all --chart-dirs charts --chart-dirs other-charts --excluded-charts rstudio-workbench,rstudio-library,rstudio-connect,rstudio-pm,posit-chronicle
        continue-on-error: true

      - name: Notify Slack of chart install failure
        if: steps.ct-install.outcome == 'failure' || steps.ct-install-all.outcome == 'failure'
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload-delimiter: "_"
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Failure during test installation of ${{ steps.ct-install.outcome == 'failure' && 'changed' || 'all' }} charts.  ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: Fail the workflow if failed installs
        if: steps.ct-install.outcome == 'failure' || steps.ct-install-all.outcome == 'failure'
        run: exit 1

  check-versions-connect:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.6.3

      - uses: extractions/setup-just@v2

      - name: Run executable verification for default interpreters
        run: |
          just test-connect-interpreter-versions
