{{- $useLegacyProfiles := hasKey .Values.config.server "launcher.kubernetes.profiles.conf" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rstudio-workbench.fullname" . }}
  namespace: {{ $.Release.Namespace }}
spec:
  strategy:
    type: {{ .Values.strategy.type }}
    {{- if eq .Values.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
    {{- end }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "rstudio-workbench.selectorLabels" . | nindent 6 }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      annotations:
        checksum/config-general: {{ include (print $.Template.BasePath "/configmap-general.yaml") . | sha256sum }}
        {{- if and .Values.prometheus.legacy .Values.prometheusExporter.enabled }}
        checksum/config-graphite: {{ include (print $.Template.BasePath "/configmap-graphite-exporter.yaml") . | sha256sum }}
        {{- end }}
        checksum/config-prestart: {{ include (print $.Template.BasePath "/configmap-prestart.yaml") . | sha256sum }}
        checksum/config-secret: {{ include (print $.Template.BasePath "/configmap-secret.yaml") . | sha256sum }}
        checksum/config-session: {{ include (print $.Template.BasePath "/configmap-session.yaml") . | sha256sum }}
      {{- if .Values.prometheus }}
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        {{- if and .Values.prometheus.legacy .Values.prometheusExporter.enabled }}
        prometheus.io/port: "9108"
        {{- else }}
        prometheus.io/port: {{ .Values.prometheus.port | quote }}
        {{- end }}
      {{- end }}
        {{- include "rstudio-workbench.pod.annotations" . | nindent 8 }}
      labels:
        {{- include "rstudio-workbench.selectorLabels" . | nindent 8 }}
      {{- with .Values.pod.labels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.pod.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{/**
         * NOTE: In the case where a service account was in use and
         * then later removed, the behavior of kubernetes is to
         * leave the `serviceAccount` / `serviceAccountName` value
         * unchanged unless explicitly overwritten with an empty
         * string. See linked issues tracing backward from:
         * https://github.com/kubernetes/kubernetes/issues/108208#issuecomment-1262269204
         * and also the "Note" callout at the end of this section:
         * https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-multiple-service-accounts
         */}}
      {{- $serviceAccountName := .Values.rbac.serviceAccount.name | default (include "rstudio-workbench.fullname" .)}}
      {{- if or .Values.rbac.create (.Values.rbac.serviceAccount.name) }}
      serviceAccountName: {{ $serviceAccountName }}
      {{- else }}
      serviceAccountName: {{ .Values.rbac.serviceAccount.name | toString | quote }}
      {{- end }}
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      shareProcessNamespace: {{ .Values.shareProcessNamespace }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.pod.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.pod.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.pod.terminationGracePeriodSeconds }}
      {{- if or .Values.initContainers .Values.chronicleAgent.enabled }}
      initContainers:
        {{- with .Values.initContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.chronicleAgent.enabled }}
        - name: chronicle-agent
          {{- if .Values.chronicleAgent.image.sha }}
          image: "{{ required "chronicleAgent.image.registry must be specified" .Values.chronicleAgent.image.registry }}/{{ required "chronicleAgent.image.repository must be specified" .Values.chronicleAgent.image.repository }}:{{ required "chronicleAgent.image.tag must be specified" .Values.chronicleAgent.image.tag }}@sha256:{{ .Values.chronicleAgent.image.sha }}"
          {{- else }}
          image: "{{ required "chronicleAgent.image.registry must be specified" .Values.chronicleAgent.image.registry }}/{{ required "chronicleAgent.image.repository must be specified" .Values.chronicleAgent.image.repository }}:{{ required "chronicleAgent.image.tag must be specified" .Values.chronicleAgent.image.tag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.chronicleAgent.image.imagePullPolicy }}
          restartPolicy: Always
          {{- with .Values.chronicleAgent.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.chronicleAgent.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.chronicleAgent.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: CHRONICLE_SERVER_ADDRESS
              value: {{ include "rstudio-library.chronicle-agent.serverAddress" (dict "chronicleAgent" .Values.chronicleAgent "Release" .Release) | trim | quote }}
            - name: CHRONICLE_WORKBENCH_APIKEY
              {{- if .Values.chronicleAgent.workbenchApiKey.valueFrom }}
              valueFrom:
{{ toYaml .Values.chronicleAgent.workbenchApiKey.valueFrom | indent 16 }}
              {{- else }}
              value: {{ .Values.chronicleAgent.workbenchApiKey.value | quote }}
              {{- end }}
            {{- with .Values.chronicleAgent.agentEnvironment }}
            - name: CHRONICLE_AGENT_ENVIRONMENT
              value: {{ . | quote }}
            {{- end }}
            {{- with .Values.chronicleAgent.env }}
            {{ toYaml . | indent 12 }}
            {{- end }}
        {{- end }}
      {{- end }}
{{- /*
  this is where most important definition of containers takes place
  see "_helpers.tpl" for the definition

  we define in a helper so that the same definition can be used in tests

  NOTE: this also includes volumes too!!
  */ -}}
{{ include "rstudio-workbench.containers" . | indent 6 }}
