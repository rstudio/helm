{{- if .Values.nameservice.enabled }}
{{- $authProvider := "" }}
{{- if hasKey .Values.config "Authentication" }}
{{- if hasKey .Values.config.Authentication "Provider" }}
{{- $authProvider = .Values.config.Authentication.Provider }}
{{- end }}
{{- end }}
{{- $validProviders := list "oauth2" "saml" "ldap" }}
{{- if not (has $authProvider $validProviders) }}
{{- fail (printf "nameservice.enabled requires config.Authentication.Provider to be one of: %s. Current provider: '%s'" (join ", " $validProviders) $authProvider) }}
{{- end }}
{{- if and .Values.nameservice.secretName .Values.nameservice.apiKey }}
{{- fail "nameservice.secretName and nameservice.apiKey cannot both be set. Use secretName to use an existing secret OR apiKey to create a new secret." }}
{{- end }}
{{- if and (not .Values.nameservice.secretName) (not .Values.nameservice.apiKey) }}
{{- fail "When nameservice.enabled is true, either nameservice.secretName (for existing secret) or nameservice.apiKey (to create new secret) must be provided." }}
{{- end }}
{{- if not .Values.nameservice.secretName }}
{{- $config := printf "CONNECT_API_KEY=%s\nCONNECT_SERVER=%s" .Values.nameservice.apiKey .Values.nameservice.server }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "rstudio-connect.fullname" . }}-nameservice-config
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "rstudio-connect.labels" . | nindent 4 }}
type: Opaque
data:
  libnss_connect.conf: {{ $config | b64enc | quote }}
{{- end }}
{{- end }}
