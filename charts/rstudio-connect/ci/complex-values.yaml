sharedStorage:
  create: true
  path: /var/lib/rstudio-connect
  storageClassName: test-class
  volumeName: test-volume
  requests:
    storage: "10Gi"
strategy:
  type: "RollingUpdate"
  rollingUpdate:
    maxSurge: "100%"
    maxUnavailable: 0
image:
  repository: rstudio/rstudio-connect
  tag: 1.8.4-11
  imagePullPolicy: "IfNotPresent"
  imagePullSecrets:
    - name: "some-secret"
service:
  type: NodePort
  nodePort: 32029
  annotations:
    testannotation: one

podDisruptionBudget:
  minAvailable: 30%

nodeSelector:
  something: special

pod:
  env:
    - name: RSTUDIO_CONNECT_HASTE
      value: "true"
  volumes:
    - name: test
      emptyDir: {}
  volumeMounts:
    - name: test
      mountPath: /tmp/somepath/
  annotations:
    testannotation2: three
  labels:
    app.kubernetes.io/part-of: rstudio-team
  sidecar:
    - name: test
      image: "busybox"
      command: ["sleep"]
      args: ["infinity"]
      imagePullPolicy: "IfNotPresent"
    # This will spin up the chronicle-agent sidecar container
    - name: chronicle-agent
      image: ghcr.io/rstudio/chronicle-agent:2024.03.0
      env:
      - name: CHRONICLE_SERVER_ADDRESS
        value: "http://chronicle-server.default"
  priorityClassName: something-fun
  tolerations:
    - key: "example-key"
      operator: "Exists"
      effect: "NoSchedule"
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: rstudio-team
            topologyKey: kubernetes.io/hostname

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: traefik

  # Defines network routing in the traefik configuration.
  hosts:
    - host: connect.rstudio.com
      paths:
        - /

initContainers:
  - name: example-init
    image: busybox
    command: ["sleep"]
    args: ["1"]
    volumeMounts:
      - mountPath: /testing
        name: test

extraObjects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: "test"
    data:
      something: fun
  - |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: "test2"
    data:
      something: {{ printf "fun2" }}

license:
  key: test
replicas: 2

resources:
  requests:
    enabled: false
    memory: "1Gi"
    cpu: "100m"
    ephemeralStorage: "100Mi"
  limits:
    enabled: false
    memory: "2Gi"
    cpu: "2000m"
    ephemeralStorage: "200Mi"

livenessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 2
  failureThreshold: 10
startupProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 1
  # failureThreshold * periodSeconds should be strictly > worst case startup time
  failureThreshold: 30
readinessProbe:
  enabled: true
  initialDelaySeconds: 3
  periodSeconds: 3
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3

config:
  HTTP:
    Listen: :3939
  Authentication:
    Provider: password
  Python:
    Enabled: true
    Executable: /opt/python/3.6.5/bin/python
  'RPackageRepository "CRAN"':
    URL: https://packagemanager.rstudio.com/cran/__linux__/bionic/latest
  'RPackageRepository "RSPM"':
    URL: https://packagemanager.rstudio.com/cran/__linux__/bionic/latest
  Server:
    Address: http://localhost:3939
    DataDir: /var/lib/rstudio-connect
    RVersionScanning: false
    RVersion:
      - /opt/R/3.6.2
