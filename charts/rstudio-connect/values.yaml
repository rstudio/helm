# -- The name of the chart deployment (can be overridden)
nameOverride: ""
# -- The full name of the release (can be overridden)
fullnameOverride: ""

# -- A Connect version to override the "tag" for the RStudio Connect image and the Content Init image. Necessary until https://github.com/helm/helm/issues/8194
versionOverride: ""

sharedStorage:
  # -- Whether to create the persistentVolumeClaim for shared storage
  create: false
  # -- The name of the pvc. By default, computes a value from the release name
  name: ""
  # -- Whether the persistentVolumeClaim should be mounted (even if not created)
  mount: false
  # -- The path to mount the sharedStorage claim within the Connect pod
  path: /var/lib/rstudio-connect
  # -- Whether the persistentVolumeClaim should be mounted to the content pods created by the Launcher
  mountContent: false
  # -- The type of storage to use. Must allow ReadWriteMany
  storageClassName: false
  # -- A list of accessModes that are defined for the storage PVC (represented as YAML)
  accessModes:
    - ReadWriteMany
  requests:
    # -- The volume of storage to request for this persistent volume claim
    storage: "10Gi"
  # -- Annotations for the Persistent Volume Claim
  annotations:
    helm.sh/resource-policy: keep

rbac:
  # -- Whether to create rbac. (also depends on launcher.enabled = true)
  create: true
  # -- Whether to create the ClusterRole that grants access to the Kubernetes nodes API. This is used by the Launcher
  # to get all of the IP addresses associated with the node that is running a particular job. In most cases, this can
  # be disabled as the node's internal address is sufficient to allow proper functionality.
  clusterRoleCreate: false
  # -- The serviceAccount to be associated with rbac (also depends on launcher.enabled = true)
  serviceAccount:
    create: true
    name: ""
    annotations: {}

# -- Extra objects to deploy (value evaluated as a template)
extraObjects: []

image:
  # -- Image repository
  repository: ghcr.io/rstudio/rstudio-connect
  # -- Image tag
  # @default -- The chart's `appVersion`
  tag: ""
  # -- The [image pull
  # policy](https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy)
  imagePullPolicy: "IfNotPresent"
  # -- [Image pull
  # secrets](https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod),
  # if any
  imagePullSecrets: []

# -- Defines the update strategy for a deployment
strategy:
  type: "RollingUpdate"
  rollingUpdate:
    maxSurge: "100%"
    maxUnavailable: 0

service:
  # -- Annotations that will be added onto the service
  annotations: {}
  # -- The service type (LoadBalancer, NodePort, etc.)
  type: NodePort
  # -- The nodePort to use when using service type NodePort. If not provided, Kubernetes will provide one automatically
  nodePort: false
  # -- The port to use for the Connect service
  port: 80

pod:
  # -- A helper that defines the RSTUDIO_CONNECT_HASTE environment variable
  haste: true
  # -- An array of maps that is injected as-is into the "env:" component of the pod.container spec
  env: []
  # -- An array of maps that is injected as-is into the "volumes:" component of the pod spec
  volumes: []
  # -- An array of maps that is injected as-is into the "volumeMounts" component of the pod spec
  volumeMounts: []
  # -- A string representing the service account of the pod spec
  serviceAccountName: false
  # -- Additional annotations to add to the rstudio-connect pods
  annotations: {}
  # -- Additional labels to add to the rstudio-connect pods
  labels: {}
  # -- An array of containers that will be run alongside the main pod
  sidecar: false
  # -- A map used verbatim as the pod's "affinity" definition
  affinity: {}
  # -- Values to set the `securityContext` for the connect pod
  securityContext: {}

# -- The pod's run command. By default, it uses the container's default
command: []
# -- The pod's run arguments. By default, it uses the container's default
args: []
# -- The number of replica pods to maintain for this service
replicas: 1

license:
  # -- key is the license to use
  key: null
  # -- server is the <hostname>:<port> for a license server
  server: false
  # -- the file section is used for licensing with a license file
  file:
    # -- contents is an in-line license file
    contents: false
    # -- mountPath is the place the license file will be mounted into the container
    mountPath: "/etc/rstudio-licensing"
    # -- mountSubPath is whether to mount the subPath for the file secret.
    # -- It can be preferable _not_ to enable this, because then updates propagate automatically
    mountSubPath: false
    # -- secretKey is the key for the secret to use for the license file
    secretKey: "license.lic"
    # -- secret is an existing secret with a license file in it
    secret: false

# -- Values to set the `securityContext` for Connect container. It must include "privileged: true" or "CAP_SYS_ADMIN" when
# launcher is not enabled. If launcher is enabled, this can be removed with `securityContext: null`
securityContext:
  privileged: true

prometheusExporter:
  # -- Whether the  prometheus exporter sidecar should be enabled
  enabled: true
  image:
    repository: "prom/graphite-exporter"
    tag: "v0.9.0"
    imagePullPolicy: IfNotPresent
  resources: {}

# -- Defines resources for the rstudio-connect container
resources: {}
  # requests:
  #   memory: "1Gi"
  #   cpu: "100m"
  #   ephemeral-storage: "100Mi"
  # limits:
  #   enabled: false
  #   memory: "2Gi"
  #   cpu: "2000m"
  #   ephemeral-storage: "200Mi"

# -- Used to configure the container's livenessProbe. Only included if enabled = true
livenessProbe:
  enabled: false
  httpGet:
    path: /__ping__
    port: 3939
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 2
  failureThreshold: 10

# -- Used to configure the container's startupProbe. Only included if enabled = true
startupProbe:
  enabled: false
  httpGet:
    path: /__ping__
    port: 3939
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 1
  # -- failureThreshold * periodSeconds should be strictly > worst case startup time
  failureThreshold: 30

# -- Used to configure the container's readinessProbe. Only included if enabled = true
readinessProbe:
  enabled: true
  httpGet:
    path: /__ping__
    port: 3939
  initialDelaySeconds: 3
  periodSeconds: 3
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3

# -- The initContainer spec that will be used verbatim
initContainers: false

ingress:
  # -- Whether to create an
  # [Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource)
  enabled: false
  # -- The name of an [Ingress class
  # resource](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class)
  # @default -- When empty, the Ingress will use the cluster's [default IngressClass](https://kubernetes.io/docs/concepts/services-networking/ingress/#default-ingress-class)
  ingressClassName: ""
  # -- Annotations for the Ingress, if any
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  # -- One or more [Ingress
  # rules](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules)
  hosts: []
  # - host: chart-example.local
  #   paths: []
  # -- [TLS entries](https://kubernetes.io/docs/concepts/services-networking/ingress/#tls)
  # for the Ingress, if any
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

launcher:
  # -- Whether to enable the launcher
  enabled: false
  # -- The namespace to launch sessions into. Uses the Release namespace by default
  namespace: ""
  # -- Optional. The runtime.yaml definition of Kubernetes runtime containers. Defaults to "false," which pulls in the default
  # runtime.yaml file. If changing this value, be careful to include the images that you have already used.
  customRuntimeYaml: false
  # -- User definition of launcher.kubernetes.profiles.conf for job customization
  launcherKubernetesProfilesConf: {}
  # -- Image definition for the RStudio Connect Content InitContainer
  contentInitContainer:
    # -- The repository to use for the Content InitContainer image
    repository: ghcr.io/rstudio/rstudio-connect-content-init
    # -- Overrides the image tag whose default is the chart appVersion.
    tag: ""

# -- A nested map of maps that generates the rstudio-connect.gcfg file
# @default -- [RStudio Connect Configuration Reference](https://docs.rstudio.com/connect/admin/appendix/configuration/)
config:
  HTTP:
    Listen: :3939
  Authentication:
    Provider: password
  'RPackageRepository "CRAN"':
    URL: https://packagemanager.rstudio.com/cran/__linux__/bionic/latest
  'RPackageRepository "RSPM"':
    URL: https://packagemanager.rstudio.com/cran/__linux__/bionic/latest
  Server:
    Address: http://localhost:3939
    DataDir: /var/lib/rstudio-connect
  Scheduler:
    InitTimeout: 5m
  Metrics:
    Enabled: true
    GraphiteEnabled: true
    GraphiteHost: 127.0.0.1
    GraphitePort: 9109
    GraphiteClientId: rsconnect
